-- Hanoi problem with three poles (left, middle, right)
-- and four ordered disks d1, d2, d3, d4,
-- disk d1 is the smallest one

MODULE main
VAR
  d1 : {left,middle,right}; -- smallest
  d2 : {left,middle,right};
  d3 : {left,middle,right};
  d4 : {left,middle,right}; -- largest
  move : 1..4; -- possible moves

DEFINE
  move_d1 := move=1;
  move_d2 := move=2;
  move_d3 := move=3;
  move_d4 := move=4;

  -- di is clear iff it can move to a different 
  clear_d1 := TRUE;
  
  clear_d2 := d2!=d1;
  clear_d3 := d3!=d1 & d3!=d2;
  clear_d4 := d4!=d1 & d4!=d2 & d4!=d3;

 -- TODO

INIT
  d1 = left &
  d2 = left &
  d3 = left &
  d4 = left ;
-- non moving disk does not change position
TRANS 
  ((!next(move_d1) -> next(d1) = d1) &
  (!next(move_d2) -> next(d2) = d2) &
  (!next(move_d3) -> next(d3) = d3) &
  (!next(move_d4) -> next(d4) = d4))


-- a disk which is not clear cannot move
TRANS 
  ((!(clear_d2) -> next(move_d2) = FALSE) &
  (!(clear_d3) -> next(move_d3) = FALSE) &
  (!(clear_d4) -> next(move_d4) = FALSE))

-- a disk which moves, changes its location
TRANS
  ((next(move_d1) -> next(d1) != d1) &
  (next(move_d2) -> next(d2) != d2) &
  (next(move_d3) -> next(d3) != d3) &
  (next(move_d4) -> next(d4) != d4))

-- move d1
TRANS
  next(move_d1) ->
	next(d1) != d1 & next(d2) = d2 &	next(d3) = d3 &	next(d4) = d4 ;
-- move d2
TRANS
  next(move_d2) ->
	next(d1) = d1 &	next(d2) != d2 & next(d3) = d3 &	next(d4) = d4 & next(d2) != d1;
-- move d3
TRANS
  next(move_d3) ->
	next(d1) = d1 & next(d2) = d2 & next(d3) != d3 & next(d4) = d4 & next(d3) != d1 & next(d3) != d2;
--move d4
TRANS 
next(move_d4) -> next(d1) = d1 & next(d2) = d2 & next(d3) = d3 & next(d4) != d4 &
  next(d4) != d1 & next(d4) != d2 & next(d4) != d3;

TRANS
(next(clear_d1) & next(clear_d2) & next(clear_d3)) -> next(move) != 3;
TRANS
(next(clear_d1) & next(clear_d2) & next(clear_d4)) -> next(move) != 4;
TRANS
(next(clear_d1) & next(clear_d3) & next(clear_d4)) -> next(move) != 4;

LTLSPEC
!F(d1=right & d2=right & d3=right & d4=right);
