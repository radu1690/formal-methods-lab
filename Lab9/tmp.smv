MODULE block(id, ab, bl)
VAR
    above : {none, a, b, c}; -- the block above this one
    below : {none, a, b, c}; -- the block below this one
DEFINE
    clear := (above = none);
INIT
    above = ab &
    below = bl
-- a block canâ€™t be above or below itself
INVAR below != id & above != id
MODULE main
VAR
-- at each step only one block moves
    move : {move_a, move_b, move_c};
    block_a : block(a, none, b);
    block_b : block(b, a, c);
    block_c : block(c, b, none);

--  a moving block changes location and remains clear
TRANS
    (move = move_a -> next(block_a.clear) &
        next(block_a.below) != block_a.below) &
    (move = move_b -> next(block_b.clear) &
        next(block_b.below) != block_b.below) &
    (move = move_c -> next(block_c.clear) &
        next(block_c.below) != block_c.below)
-- each big and can be divided into a new TRANS

-- a non-moving block does not change its location
TRANS
(move != move_a -> next(block_a.below) = block_a.below) &
(move != move_b -> next(block_b.below) = block_b.below) &
(move != move_c -> next(block_c.below) = block_c.below)

--  a block remains connected to any non-moving block
TRANS 
(move != move_a & block_b.above = a
    -> next(block_b.above) = a) &
(move != move_a & block_c.above = a
    -> next(block_c.above) = a) &
(move != move_b & block_a.above = b
    -> next(block_a.above) = b) &
(move != move_b & block_c.above = b
    -> next(block_c.above) = b) &
(move != move_c & block_a.above = c
    -> next(block_a.above) = c) &
(move != move_c & block_b.above = c
    -> next(block_b.above) = c)


--positioning of blocks is symmetric: above and below relations must be symmetric.
INVAR
    (block_a.above = b <-> block_b.below = a)
    & (block_a.above = c <-> block_c.below = a)
    & (block_b.above = a <-> block_a.below = b)
    & (block_b.above = c <-> block_c.below = b)
    & (block_c.above = a <-> block_a.below = c)
    & (block_c.above = b <-> block_b.below = c)

    & (block_a.above = none ->
        (block_b.below != a & block_c.below != a))
    & (block_b.above = none ->
        (block_a.below != b & block_c.below != b))
    & (block_c.above = none ->
        (block_a.below != c & block_b.below != c))

    & (block_a.below = none ->
        (block_b.above != a & block_c.above != a))
    & (block_b.below = none ->
        (block_a.above != b & block_c.above != b))
    & (block_c.below = none ->
        (block_a.above != c & block_b.above != c))

-- a block cannot move if it has some other block above itself
TRANS
    (!next(block_a.clear) -> next(move) != move_a) &
    (!next(block_b.clear) -> next(move) != move_b) &
    (!next(block_c.clear) -> next(move) != move_c)

LTLSPEC
    ! F(block_a.below = none & block_a.above = b &
    block_b.below = a & block_b.above = c &
    block_c.below = b & block_c.above = none)